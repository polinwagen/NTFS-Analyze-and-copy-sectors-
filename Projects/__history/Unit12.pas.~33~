unit Unit12;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, Vcl.FileCtrl, Vcl.ComCtrls,Unit11,
  Vcl.Buttons;

type
  TForm12 = class(TForm)
    Memo1: TMemo;
    Memo2: TMemo;
    Label3: TLabel;
    Label4: TLabel;
    SpeedButton3: TSpeedButton;
    SpeedButton4: TSpeedButton;
    SpeedButton5: TSpeedButton;
    procedure SpeedButton3Click(Sender: TObject);
    procedure FormCreate(Sender: TObject);
    procedure SpeedButton4Click(Sender: TObject);

  private
    { Private declarations }
  public
  procedure iaSearchFile;
  procedure iaSearchDir;
  procedure GetFileRecordDir;
  procedure GetFileRecordFile;
  procedure DirSearch(Dir: string);
  procedure CopySector;
  end;

var
  Form12: TForm12;
  diradr,fladr:int64;
  I1,z,I2,m:byte;
  dirnum,currentdirnum:integer;  //номер файловой записи  каталога
  flnum:array [0..20] of integer; // номера файловых записей файлов
  dir :array [1..4] of word;
  filedir :array [1..4] of word;
  wideChars   : array[0..99] of WideChar;
  i:word;
  bytes:integer;
  flcloffs,flfrstcl,fllstcl:array[0..20,0..10] of int64;
  names: string;
  directory:string;
implementation
{$R *.dfm}

procedure TForm12.SpeedButton3Click(Sender: TObject);
begin

memo1.Lines.Clear;
memo2.Lines.Clear;

//переход к корневому каталогу,он всегда 5ая файловая запись

dirnum:=5;


/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



j:=1;

while DirectoryNames[j]<>'' do
begin
directoryf:=DirectoryNames[j];
GetFileRecordDir();
inc(j);
end;


directoryf:=CurrentName;
GetFileRecordDir(); //получаем номер файловой записи каталога
currentdirnum:=dirnum;
GetFileRecordFile(); //получим номера файловых запесей выбранных файлов внутри каталога









  for I := 0 to num-1  do
    begin
     Form12.Memo2.Lines.Add('Последовательность отрезков для файла:'+select[I]);


      fladr:=(mffrstcl[0]*8*512)+flnum[I]*2*512;


     FillChar(buf1,sizeof(buf1),0);
 if(hDevice<>INVALID_HANDLE_VALUE) then begin
  SetFilePointerEx(hDevice,fladr,nil,FILE_BEGIN);
  bResult:=ReadFile(hDevice,buf1,1024,lpBytesReturned,nil); //читаем mft
 end;

 attrhead:=$80;

  Form11.Search(); //Загружаем в массив DATA содержимое атрибута DATA

                //раскрываем список отрезков DATA
   offset:=64; // список отрезков начинается по смещению в атрибуте DATA с позиции 40h

   Form11.UnPack(); // получаем список отрезков атрибута DATA таблицы mft
            //cloffs,frstcl,lstcl-кластерное смещение,первыйкластер,последний кластер

      z:=0;

      while cloffs[z]<>0 do
      begin
      flcloffs[I][z]:=cloffs[z];
      flfrstcl[I][z]:=frstcl[z];
      fllstcl[I][z]:=lstcl[z];
      Form12.Memo2.Lines.Add(inttostr(z)+' отрезок = Начальный кластер('+inttostr(frstcl[z])+'); '+' Последний кластер('+inttostr(lstcl[z])+');');
      inc(z);
      end;


    end;


ShowMessage('Анализ для '+inttostr(num)+' файлов успешно завершен!');
speedbutton4.Enabled:=True;
speedbutton3.Enabled:=False;
end;


procedure TForm12.SpeedButton4Click(Sender: TObject);
begin
directory:=CurrentName;
s:=Pchar('\\.\'+form11.DriveCombobox1.Drive+':');
s1:=Pchar('\\.\'+form11.DriveCombobox2.Drive+':');
SetCurrentDir(s1+'\');
CreateDir(s1+'\'+CurrentName);

Form12.DirSearch(s+'\'+CurrentName);
speedbutton4.Enabled:=False;
ShowMessage('Копирование каталога'+directory+'и его содержимого успешно завершено!');
end;







procedure TForm12.DirSearch(Dir: string);
var
  SearchRec: TSearchRec;
  j:byte;
begin
 CurrentName:=Copy(Dir,8,length(Dir)-7);
 CreateDir(s1+'\'+CurrentName);
  Dir := IncludeTrailingBackslash(Dir);
  j:=0;

  if FindFirst(Dir + '*.*', faAnyFile, SearchRec) = 0 then
    repeat
      Application.ProcessMessages;

        if (SearchRec.Attr and faDirectory) <> 0 then begin
          if (SearchRec.name <> '.') and (SearchRec.name <> '..') then
            DirSearch(Dir + SearchRec.name)
        end


      else
       begin



       names:=ExtractFileName(SearchRec.Name);
       Form12.CopySector;
       names:='';



       end;
    until FindNext(SearchRec) <> 0;
  FindClose(SearchRec);
end;






procedure TForm12.CopySector;    //копирование по секторам
var
  iFileHandle,iFileHandle1: Integer;
  iFileLength: Integer;
  iBytesRead: Integer;
  Buffer: PChar;
  i,j: Integer;
  m:integer;
begin


        I:=0;
      Form12.Memo1.Lines.Add('Копирование файла:'+names[I]);
      SetCurrentDir(s1+'\'+CurrentName);
     iFileHandle1:=CreateFile(Pchar(Names), GENERIC_READ, FILE_SHARE_READ or FILE_SHARE_WRITE,nil,OPEN_ALWAYS,0,0);
     FileClose(iFileHandle1);
      iFileHandle := FileOpen(s+'\'+CurrentName+'\'+Names, fmOpenRead);
      iFileLength := FileSeek(iFileHandle,0,2);
      iFileHandle1 := FileOpen(s1+'\'+CurrentName+'\'+Names, fmOpenWrite);
      Buffer := PChar(AllocMem(512 + 1));   //копирование по блокам равным одному сектору
         while I<=iFileLength do
         begin

       FileSeek(iFileHandle,0,I);
       FileSeek(iFileHandle1,0,I);

      iBytesRead := FileRead(iFileHandle, Buffer^, 512);
      iBytesRead:=FileWrite(iFileHandle1, Buffer^, 512);


      m:=I div 512;
       Form12.Memo1.Lines.Add('Скопирован сектор:'+inttostr(m));


      I:=I+512;

         end;

      FileClose(iFileHandle);
      FileClose(iFileHandle1);
      FreeMem(Buffer);
      inc(j);

  end;

procedure TForm12.FormCreate(Sender: TObject);
begin
memo1.Lines.Clear;
memo2.Lines.Clear;
speedbutton4.Enabled:=false;
end;

procedure TForm12.GetFileRecordDir;
begin
diradr:=(mffrstcl[0]*8*512)+dirnum*2*512;

  FillChar(buf1,sizeof(buf1),0);
 if(hDevice<>INVALID_HANDLE_VALUE) then begin
  SetFilePointerEx(hDevice,diradr,nil,FILE_BEGIN);
  bResult:=ReadFile(hDevice,buf1,1024,lpBytesReturned,nil); //читаем корневой каталог
 end;

attrhead:=$A0;
FillChar(DATA,sizeof(DATA),0);
FillChar(attr,sizeof(attr),0);
FillChar(atrlenght,sizeof(atrlenght),0);
atroffset:=0;
// в  DATA будет лежать аттрибут allocation index для корневого каталога
Form11.Search();
// теперь надо найти отрезки .длина атрибута   IA равна 4,значит отрезки начинаются со смещения 48h

offset:=72; //48h


FillChar(cloffs,sizeof(cloffs),0);
FillChar(frstcl,sizeof(frstcl),0);
FillChar(lstcl,sizeof(lstcl),0);
Form11.UnPack();  // получаем список отрезков атрибута IA
                 //cloffs,frstcl,lstcl-кластерное смещение,первыйкластер,последний кластер
z:=0;
  FillChar(wideChars,sizeof(wideChars),0);
  StringToWideChar(directoryf, wideChars, 100); //юникод русских символов
  FillChar(dir,sizeof(dir),0);

 for I1 := 1 to 4 do                      //помещаем имя каталога в массив
    begin
    dir[I1]:=ord(wideChars[I1-1]);
    end;



 while cloffs[z]<> 0 do
 begin
   for m := 0 to cloffs[z]-1 do
   begin

  bytes:=8*512;   //кластер,т.к в каждом кластере новая индексная запись

diradr:=(frstcl[z]*8*512)+bytes*m;
 FillChar(buf1,sizeof(buf1),0);
 if(hDevice<>INVALID_HANDLE_VALUE) then begin
  SetFilePointerEx(hDevice,diradr,nil,FILE_BEGIN);
  bResult:=ReadFile(hDevice,buf1,bytes,lpBytesReturned,nil); //читаем index allocation корневого каталога
 end;

   iaSearchDir; // ищем номер файловой записи выбранного каталога
    end;
   inc(z);
    end;


end;



procedure TForm12.GetFileRecordFile;
begin
  diradr:=(mffrstcl[0]*8*512)+dirnum*2*512;

  FillChar(buf1,sizeof(buf1),0);
 if(hDevice<>INVALID_HANDLE_VALUE) then begin
  SetFilePointerEx(hDevice,diradr,nil,FILE_BEGIN);
  bResult:=ReadFile(hDevice,buf1,1024,lpBytesReturned,nil); //читаем выбранный каталог
 end;


attrhead:=$A0;
FillChar(DATA,sizeof(DATA),0);
FillChar(attr,sizeof(attr),0);
FillChar(atrlenght,sizeof(atrlenght),0);
atroffset:=0;
                // в  DATA будет лежать аттрибут allocation index для выбранного каталога
Form11.Search();

              // теперь надо найти отрезки .длина атрибута   IA равна 4,значит отрезки начинаются со смещения 48h


offset:=72; //48h


FillChar(cloffs,sizeof(cloffs),0);
FillChar(frstcl,sizeof(frstcl),0);
FillChar(lstcl,sizeof(lstcl),0);
Form11.UnPack();  // получаем список отрезков атрибута IA
                 //cloffs,frstcl,lstcl-кластерное смещение,первыйкластер,последний кластер



 for I2 := 0 to num-1 do
 begin
    StringReplace(select[I2], #13, '', [rfReplaceAll]);
    StringReplace(select[I2], #10, '', [rfReplaceAll]);


 z:=0;
  FillChar(wideChars,sizeof(wideChars),0);
  StringToWideChar( select[I2], wideChars, 100); //юникод русских символов
  FillChar(filedir ,sizeof(dir),0);

 for I1 := 1 to 4 do                      //помещаем имя файла в массив
    begin
    filedir [I1]:=ord(wideChars[I1-1]);
    end;



 while cloffs[z]<> 0 do
 begin
    for m := 0 to cloffs[z]-1 do
   begin

  bytes:=8*512;   //кластер,т.к в каждом кластере новая индексная запись
  diradr:=(frstcl[z]*8*512)+bytes*m;

 FillChar(buf1,sizeof(buf1),0);
 if(hDevice<>INVALID_HANDLE_VALUE) then begin
  SetFilePointerEx(hDevice,diradr,nil,FILE_BEGIN);
  bResult:=ReadFile(hDevice,buf1,bytes,lpBytesReturned,nil); //читаем index allocation
 end;

   iaSearchFile(); // ищем номер файловой записи выбранного файла
   end;
   inc(z);
 end;
 end;

end;










procedure TForm12.iaSearchDir;//для каталога
 var
iabuf: array [0..7] of byte;
name: array [1..4] of word;
I:longint;
j:byte;
ravno:bool;
frstentryindex,indsize,nameoffset,namedir:longint;
a:integer;
  begin
   FillChar(name,sizeof(name),0);
    FillChar(iabuf,sizeof(iabuf),0);
    j:=0;


     for I := 24 to 27  do
     begin
      iabuf[j]:=buf1[I];
      inc(j);
     end;

      j:=0;

      frstentryindex:=int64(iabuf)+24; //начало индексной записи относительно ia
      FillChar(iabuf,sizeof(iabuf),0);





  ravno:=false;


  while ravno=false do
  begin
  
       FillChar(name,sizeof(name),0);
       FillChar(iabuf,sizeof(iabuf),0);


       j:=0;




     for I := frstentryindex+8 to frstentryindex+9  do
      begin
      iabuf[j]:=buf1[I];
      inc(j);
     end;
    j:=0;


      indsize:=int64(iabuf); //размер индексной записи
      FillChar(iabuf,sizeof(iabuf),0);


    for I := frstentryindex+10 to frstentryindex+11  do
     begin
     iabuf[j]:=buf1[I];
     inc(j);
     end;
     j:=0;


     nameoffset:=int64(iabuf); //начало file name
      FillChar(iabuf,sizeof(iabuf),0);


     //один символ 2 байта ,берем для сравнения первых 4 символа ,читаем 8 байт
        a:=82-nameoffset;
        j:=1;

    for I := frstentryindex+nameoffset+a to frstentryindex+nameoffset+a+8  do
     begin
      if (I mod 2)<>0 then
      begin
      name[j]:=name[j]+(buf1[I] shl 8);
      inc(j);
      end;

     if (I mod 2)=0 then
        begin
        name[j]:=name[j]+buf1[I];
        end;

        end;

            j:=0;
            
       for I := frstentryindex to frstentryindex+5 do
     begin
     iabuf[j]:=buf1[I];
     inc(j);
     end;
    j:=0;

    dirnum:=int64(iabuf);  //носер фс
    FillChar(iabuf,sizeof(iabuf),0);



    frstentryindex:=frstentryindex+indsize;


 if name[1]=dir[1] then
   if name[2]=dir[2] then
      if name[3]=dir[3] then
         if name[4]=dir[4] then
               ravno:=True;


   if indsize = 0 then        // если кол-во кластеров н-го прочитано и каталог не найден выйти из процедуры и читать след отр
          ravno:=True;


  end;





 end;


procedure TForm12.iaSearchFile;    //для файлов
 var
iabuf: array [0..7] of byte;
name: array [1..4] of word;
I:longint;
j:byte;
ravno:bool;
frstentryindex,indsize,nameoffset:longint;
a:integer;
  begin
   FillChar(name,sizeof(name),0);
    FillChar(iabuf,sizeof(iabuf),0);
    j:=0;


     for I := 24 to 27  do
     begin
      iabuf[j]:=buf1[I];
      inc(j);
     end;

      j:=0;

      frstentryindex:=int64(iabuf)+24; //начало индексной записи относительно ia
      FillChar(iabuf,sizeof(iabuf),0);





  ravno:=false;


  while ravno=false do
  begin

       FillChar(name,sizeof(name),0);
       FillChar(iabuf,sizeof(iabuf),0);


       j:=0;




     for I := frstentryindex+8 to frstentryindex+9  do
      begin
      iabuf[j]:=buf1[I];
      inc(j);
     end;
    j:=0;


      indsize:=int64(iabuf); //размер индексной записи
      FillChar(iabuf,sizeof(iabuf),0);


    for I := frstentryindex+10 to frstentryindex+11  do
     begin
     iabuf[j]:=buf1[I];
     inc(j);
     end;
     j:=0;


     nameoffset:=int64(iabuf); //начало file name
      FillChar(iabuf,sizeof(iabuf),0);


     //один символ 2 байта ,берем для сравнения первых 4 символа ,читаем 8 байт
        a:=82-nameoffset; //отриц чисел не может быть,меняем местами
        j:=1;

    for I := frstentryindex+nameoffset+a to frstentryindex+nameoffset+a+8  do
     begin
      if (I mod 2)<>0 then
      begin
      name[j]:=name[j]+(buf1[I] shl 8);
      inc(j);
      end;

     if (I mod 2)=0 then
        begin
        name[j]:=name[j]+buf1[I];
        end;

        end;

            j:=0;

       for I := frstentryindex to frstentryindex+5 do
     begin
     iabuf[j]:=buf1[I];
     inc(j);
     end;
    j:=0;

    flnum[I2]:=int64(iabuf);  //носер фс
    FillChar(iabuf,sizeof(iabuf),0);



    frstentryindex:=frstentryindex+indsize;


 if name[1]=filedir[1] then
   if name[2]=filedir[2] then
      if name[3]=filedir[3] then
         if name[4]=filedir[4] then
               ravno:=True;


   if indsize = 0 then        // если кол-во кластеров н-го прочитано и каталог не найден выйти из процедуры и читать след отр
          ravno:=True;


  end;





 end;









end.
